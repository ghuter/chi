typedef enum {
	UNDEFINED = 0,

	EOI, // End-Of-Input
	INT,
	FLOAT,
	IDENTIFIER,
	NEWLINE,
	SEMICOLON,
	SPC,
	COLON,
	COMMA,
	DOT,
	LPAREN,
	RPAREN,
	LBRACKETS,
	RBRACKETS,
	LBRACES,
	RBRACES,

// OPERATORS
	MUL,
	DIV,
	MOD,
	ADD,
	SUB,
	LSHIFT,
	RSHIFT,
	LT,
	GT,
	LE,
	GE,
	EQUAL,
	NEQUAL,
	BAND,
	BXOR,
	BOR,
	LAND,
	LOR,
	BNOT,
	LNOT,
	ASSIGN,
	BAND_ASSIGN,
	BOR_ASSIGN,
	BXOR_ASSIGN,
	BNOT_ASSIGN,
	LAND_ASSIGN,
	LOR_ASSIGN,
	LSHIFT_ASSIGN,
	RSHIFT_ASSIGN,
	ADD_ASSIGN,
	SUB_ASSIGN,
	MUL_ASSIGN,
	DIV_ASSIGN,
	MOD_ASSIGN,
	AT,

	NTOK, // must be the last of "regular tokens"

	FOR,
	IF,
	ELSE,
	STRUCT,
	SIZEOF,
	RETURN,
	INTERFACE,
	IN,
	IMPORT,
	ENUM,
	NKEYWORDS, // must be the last "keyword"
} ETok;

typedef struct {
	ETok type;
} Tok;

char *keywords[] = {
	[FOR]       = "for",
	[IF]        = "if",
	[ELSE] 		= "else",
	[STRUCT]    = "struct",
	[SIZEOF]    = "sizeof",
	[RETURN]    = "return",
	[INTERFACE] = "interface",
	[IN]        = "in",
	[IMPORT]    = "import",
	[ENUM]		= "enum",
};

char *tokenstrs[] = {
	[EOI]           = "EOI",
	[FOR]           = "FOR",
	[IF]            = "IF",
	[ELSE]			= "ELSE",
	[STRUCT]        = "STRUCT",
	[SIZEOF]        = "SIZEOF",
	[RETURN]        = "RETURN",
	[INTERFACE]     = "INTERFACE",
	[IN] 		    = "IN",
	[IMPORT]        = "IMPORT",
	[ENUM]		    = "ENUM",

	[INT]			= "INT",
	[FLOAT]			= "FLOAT",
	[IDENTIFIER]    = "IDENTIFIER",
	[NEWLINE]       = "NEWLINE",
	[SEMICOLON]     = "SEMICOLON",
	[SPC]           = "SPC",
	[COLON]         = "COLON",
	[COMMA]         = "COMMA",
	[DOT]		    = "DOT",
	[LPAREN]        = "LPAREN",
	[RPAREN]        = "RPAREN",
	[LBRACKETS]     = "LBRACKETS",
	[RBRACKETS]     = "RBRACKETS",
	[LBRACES]       = "LBRACES",
	[RBRACES]       = "RBRACES",

	[MUL] 		    = "MUL",
	[DIV] 		    = "DIV",
	[MOD] 		    = "MOD",
	[ADD] 		    = "ADD",
	[SUB] 		    = "SUB",
	[LSHIFT]	    = "LSHIFT",
	[RSHIFT]	    = "RSHIFT",
	[LT] 		    = "LT",
	[GT] 		    = "GT",
	[LE] 		    = "LE",
	[GE] 		    = "GE",
	[EQUAL]         = "EQUAL",
	[NEQUAL]        = "NEQUAL",
	[BAND] 		    = "BAND",
	[BXOR] 		    = "BXOR",
	[BOR] 	 	    = "BOR",
	[LAND] 		    = "LAND",
	[LOR] 		    = "LOR",
	[BNOT] 		    = "BNOT",
	[LNOT] 		    = "LNOT",

	[ASSIGN]        = "ASSIGN",
	[BAND_ASSIGN]   = "BAND_ASSIGN",
	[BOR_ASSIGN]    = "BOR_ASSIGN",
	[BXOR_ASSIGN]   = "BXOR_ASSIGN",
	[BNOT_ASSIGN]   = "BNOT_ASSIGN",
	[LAND_ASSIGN]   = "LAND_ASSIGN",
	[LOR_ASSIGN]    = "LOR_ASSIGN",
	[LSHIFT_ASSIGN] = "LSHIFT_ASSIGN",
	[RSHIFT_ASSIGN] = "RSHIFT_ASSIGN",
	[ADD_ASSIGN] 	= "ADD_ASSIGN",
	[SUB_ASSIGN] 	= "SUB_ASSIGN",
	[MUL_ASSIGN] 	= "MUL_ASSIGN",
	[DIV_ASSIGN] 	= "DIV_ASSIGN",
	[MOD_ASSIGN] 	= "MOD_ASSIGN",

	[AT] 			= "AT",

	[UNDEFINED]     = "UNDEFINED",
};

